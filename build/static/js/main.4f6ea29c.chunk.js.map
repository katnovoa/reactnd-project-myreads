{"version":3,"sources":["Book.js","BooksAPI.js","SearchPage.js","MainPage.js","App.js","index.js"],"names":["book","_this","this","displayedThumbnail","props","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","concat","onChange","event","moveShelf","target","value","currentShelf","disabled","title","authors","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchPage","state","searchedBooks","updateQuery","setState","updateSearchedBooks","BooksAPI","error","_this2","Link","to","type","placeholder","map","searchedBook","key","Book","MainPage","filter","BooksApp","_this3","Route","exact","path","render","src_MainPage","src_SearchPage","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4f6ea29c.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass book extends Component {\n    render(){\n      let displayedThumbnail = this.props.book.imageLinks ?\n      this.props.book.imageLinks.thumbnail:\n      '';\n      return(\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div className=\"book-cover\" style={{ width: 128,\n              height: 193, backgroundImage: `url(\"${displayedThumbnail}\"` }}></div>\n            <div className=\"book-shelf-changer\">\n              <select\n                onChange={(event) => this.props.moveShelf(\n                this.props.book, event.target.value\n                )}\n                value={this.props.currentShelf}\n              >\n                <option value=\"move\" disabled>Move to...</option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"book-title\">{this.props.book.title}</div>\n          <div className=\"book-authors\">{this.props.book.authors}</div>\n        </div>\n    );\n  }\n}\n\nexport default book;\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\n\nimport * as BooksAPI from './BooksAPI';\n\nclass SearchPage extends Component {\n  state = {\n    query: '',\n    searchedBooks: []\n  }\n  updateQuery = (query) => {\n    this.setState({\n      query: query\n    })\n    this.updateSearchedBooks(query);\n  }\n\n  updateSearchedBooks = (query) => {\n    if(query) {\n      BooksAPI.search(query).then((searchedBooks) => {\n        if (searchedBooks.error){\n          this.setState({ searchedBooks:[] });\n        } else {\n        this.setState({ searchedBooks: searchedBooks});\n        }\n      })\n    }else{\n      this.setState({searchedBooks:[]});\n    }\n  }\n  render (){\n\n      return(\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n\n            <Link\n               to=\"/\" className=\"close-search\"\n               >Close</Link>\n\n            <div className=\"search-books-input-wrapper\">\n              <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value ={this.state.query}\n              onChange={(event) => this.updateQuery(event.target.value)}\n              />\n\n            </div>\n          </div>\n\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\">\n              {\n                this.state.searchedBooks.map(searchedBook  => {\n                  let shelf = \"none\";\n\n                    this.props.books.map(book => (\n                       book.id === searchedBook.id ?\n                      shelf = book.shelf :\n                      ''\n                    ));\n\n                return(\n                  <li key={searchedBook.id}>\n                    <Book\n                      book={searchedBook}\n                      moveShelf={this.props.moveShelf}\n                      currentShelf={shelf}\n                      />\n                    </li>\n                  )\n                })\n              }\n            </ol>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\n\n\nclass MainPage extends Component {\n  render (){\n\n      return(\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <div className=\"list-books-content\">\n            <div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                  {\n                    this.props.books\n                    .filter(book => book.shelf === 'currentlyReading')\n                    .map(book => (\n                      <li key={book.id}>\n                        <Book\n                          book={book}\n                          moveShelf={this.props.moveShelf}\n                          currentShelf=\"currentlyReading\"\n                         />\n                      </li>\n                    ))\n                  }\n                  </ol>\n                </div>\n              </div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Want to Read</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                    {\n                      this.props.books\n                      .filter(book => book.shelf === 'wantToRead')\n                      .map(book => (\n                        <li key={book.id}>\n                          <Book\n                          book={book}\n                          moveShelf={this.props.moveShelf}\n                          currentShelf=\"wantToRead\"\n\n                           />\n                        </li>\n                      ))\n                    }\n                  </ol>\n                </div>\n              </div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Read</h2>\n                <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                  {\n                    this.props.books\n                    .filter(book => book.shelf === 'read')\n                    .map(book => (\n                      <li key={book.id}>\n                        <Book\n                        book={book}\n                        moveShelf={this.props.moveShelf}\n                        currentShelf=\"read\"\n\n                         />\n                      </li>\n                    ))\n                  }\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"open-search\">\n            <Link\n              to=\"/search\"\n              >Add a book</Link>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\nexport default MainPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SearchPage from './SearchPage';\nimport MainPage from './MainPage';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css'\n\nclass BooksApp extends React.Component {\n  state = {\n    books:[]\n  }\n  componentDidMount () {\n    BooksAPI.getAll().then((books)=> {\n      this.setState({ books: books })\n    })\n  }\n\n  moveShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf);\n\n    BooksAPI.getAll().then((books)=> {\n      this.setState({books: books })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path=\"/\" render={ () => (\n          <MainPage\n           books={this.state.books}\n           moveShelf={this.moveShelf}\n          />\n           )} />\n        <Route path=\"/Search\" render={ () => (\n          <SearchPage\n            moveShelf={this.moveShelf}\n            books={this.state.books}\n            />\n            )} />\n\n\n\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n )\n"],"sourceRoot":""}